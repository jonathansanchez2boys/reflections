	What happens when you intialize a repository?Why do you need to do it?
you create a folder containing all the history of that or those files to be viewed and edited.Ease of use.
	How is the staging area different from the working directory and the repository?What value do you think it offers?
the working directory are where the files are located.The repository is then created to take what files you want if any or all from the working directory and links them and keeps track of them with commits.the staging are is the area you use to decide what files and how you want to add them to the repository for track keeping.It adds value cuz instead of adding all files from directory into 1 commit it lets the user decide what files and when to commit from the working directory.
	How can you use the staging area to make sure you have one commit per logical change?
By using get diff after adding and get diff --staged to compare files and add only files to a new commit that has a changed value.
	What are some situations when branches would be helpful in keeping your history organized?How would branches help?
branches help in creating different versions of the same file with changes the user may want without modifying the main file in the main branch.branches help because any mistakes made wouldnt modify the main branch so any mistakes made can be easily discarded.
	How do the diagrams help you visualize the branch structure?
because git only gives you commands and what they to do to perform it would be hard to understand without vusually seeing the way things work.Understanding that making a change then switching commits would erdaicate that change completely.Also making a change that you would like to keep would require adding a new branch to your master file.
	What is th result of merging two branches together?Why do we represent it in the diagram the way we do?
all the commits that were accessible by the branch parents are now merged into one commit.To show exactly how git does this.